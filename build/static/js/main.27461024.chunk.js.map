{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilterChange","Notification","notification","style","type","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","Person","person","handleDelete","name","number","onClick","Persons","persons","map","key","id","baseUrl","axios","get","then","response","data","post","delete","console","log","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personService","initialPersons","personsToShow","toUpperCase","includes","event","target","preventDefault","existingPerson","find","p","window","confirm","personToUpdate","returnedPerson","setTimeout","catch","error","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27461024.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with <input value={props.filter} onChange={props.handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ notification }) => {\n\n  const infoStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  const errorStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if (notification === null) {\n    return null\n  }\n\n  return (\n    <div style={notification.type === 'error' ? errorStyle : infoStyle}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input value={props.newName} onChange={props.handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, handleDelete }) => {\n  return (\n    <div>\n      {person.name} {person.number} &nbsp;\n      <button onClick={handleDelete}>delete</button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <div>\n      {persons.map((person) => <Person key={person.name} person={person} handleDelete={() => handleDelete(person.id)} />)}\n    </div>\n\n  )\n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = (person) => {\n  const request = axios.post(baseUrl, person)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => {\n      console.log('Response', response);\n  })\n}\n\nconst update = (person) => {\n  const request = axios.put(`${baseUrl}/${person.id}`, person)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const personsToShow = filter\n    ? persons.filter((person) => person.name.toUpperCase().includes(filter.toUpperCase()))\n    : persons\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n\n    const existingPerson = persons.find(p => p.name === newName)\n\n    if (existingPerson) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personToUpdate = { ...existingPerson, number: newNumber }\n        personService\n          .update(personToUpdate)\n          .then(returnedPerson => {\n            setPersons(persons.map(p =>\n              p.id === returnedPerson.id\n                ? returnedPerson\n                : p))\n            setNewName('')\n            setNewNumber('')\n            setNotification({\n              message: `Updated ${returnedPerson.name}`,\n              type: 'info'\n            })\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000)\n          })\n          .catch(error => {\n            setNotification({\n              message: `Information of ${personToUpdate.name} has already been removed from server`,\n              type: 'error'\n            })\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== personToUpdate.id))\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      personService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotification({\n            message: `Added ${returnedPerson.name}`,\n            type: 'info'\n          })\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotification({\n            message: error.response.data.error,\n            type: 'error'\n          })\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000)\n        })\n    }\n  }\n\n  const deletePerson = (id) => {\n    const personToDelete = persons.find(p => p.id === id)\n\n    if (window.confirm(`Delete ${personToDelete.name}?`)) {\n      personService.remove(id);\n      console.log('Deleted person', id)\n      setPersons(persons.filter(p => p.id !== id))\n      setNotification({\n        message: `Deleted ${personToDelete.name}`,\n        type: 'info'\n      })\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        onSubmit={addNewPerson}\n        newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} handleDelete={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}